name: export-and-branch-solution
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: CRMSolutions/ALM/out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: CRMSolutions/ALM/out/solutions/
      solution_target_folder:
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: CRMSolutions/ALM/solutions/

env:
#edit your values here
  ENVIRONMENT_URL: https://d416b7807c67483487e19f9676a12f2c.crm.dynamics.com/
  USERNAME: admin@M365x20969046.OnMicrosoft.com


jobs:
  export-from-dev:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Set current date as env variable
      run: echo "NOW::$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
    - name: Echo current date
      run: echo $NOW

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.4.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        user-name: ${{env.USERNAME}}
        password-secret: ${{ secrets.password }}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@0.4.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        user-name: ${{env.USERNAME}}
        password-secret: ${{ secrets.password }}
        solution-name: "ALMTestSolution"
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/ALMTestSolution.zip


    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@0.4.0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/ALMTestSolution.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/ALMTestSolution
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@0.4.0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/ALMTestSolution
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/ALMTestSolution
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
        branch-name: "ALMTestSolution"$NOW

    # - name: Merge ALMTestSolution -> staging
    #   uses: devmasx/merge-branch@master
    #   with:
    #     type: now
    #     from_branch: ALMTestSolution
    #     target_branch: staging
    #     github_token: ${{ github.token }}

    - name: Set Git config
      run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

    - name: Merge alm1 to staging
      run: |
          git fetch --unshallow
          git checkout -b staging
          git merge origin ALMTestSolution$NOW -m "Auto-merge to staging"
          git push -u origin staging

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@0.4.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        user-name: ${{env.USERNAME}}
        password-secret: ${{ secrets.password }}
        solution-name: "ALMTestSolution2"
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/ALMTestSolution2.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@0.4.0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/ALMTestSolution2.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/ALMTestSolution2
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@0.4.0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/ALMTestSolution2
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/ALMTestSolution2
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
        branch-name: "ALMTestSolution2"$NOW

    # - name: Merge ALMTestSolution2 -> staging
    #   uses: devmasx/merge-branch@master
    #   with:
    #     type: now
    #     from_branch: ALMTestSolution2
    #     target_branch: staging
    #     github_token: ${{ github.token }}

    - name: Merge alm2 to staging
      run: |
          git fetch --unshallow
          git checkout staging
          git pull
          git merge origin ALMTestSolution2$NOW -m "Auto-merge to staging"
          git push

